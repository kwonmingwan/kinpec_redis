"""
Django settings for kinpec_redis project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os, json

from django.core.exceptions import ImproperlyConfigured

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


#OS 구분
def get_log_path():
    os_name = os.name.upper()
    global GB_LOG_PATH
    if os.name.upper() == 'Windows':
        GB_LOG_PATH = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    elif os.name.upper() == 'Linux':
        GB_LOG_PATH = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    else:
        GB_LOG_PATH = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

#설정파일
config_file = os.path.join(BASE_DIR, 'config.json')
with open(config_file) as f:
    config = json.loads(f.read())

def get_config(setting, config=config):
    try:
        print("check config.json : ", config[setting])
        return config[setting]
    except KeyError:
        error_msg = "Set the {} environment variable".format(setting)
        raise ImproperlyConfigured(error_msg)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=2pzyj2h7(s+yocxe18l-s-o-+flq_i)h9uwaqt_cj49!@v&yg'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['54.250.54.22', 'localhost', '127.0.0.1', '192.168.155.2', '192.168.155.30']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api_user',
    'api_location'    
    'corsheaders', # CORS
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # CORS
    'django.middleware.common.CommonMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = (
    'http://localhost:8000',
)

ROOT_URLCONF = 'kinpec_redis.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'kinpec_redis.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE':'django.db.backends.postgresql',
        'NAME':get_config("NAME"),
        'USER':get_config("USER"),
        'PASSWORD':get_config("PASSWORD"),
        'HOST':get_config("HOST"),
        'PORT':get_config("PORT"),
    }
}

#로그
LOGGING = {
    'version': 1, 'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG', 'class': 'logging.FileHandler', 'filename': 'C:\dev\python\logs\kinpec_redis\debug.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'], 'level': 'DEBUG', 'propagate': True,
        },
    },
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
